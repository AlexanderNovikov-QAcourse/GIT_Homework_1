GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.

 5. Клонировать репозиторий JSON на локальный компьютер.
git clone git@github.com:AlexanderNovikov-QAcourse/JSON.git


 6. Внутри локального JSON создать файл “new.json”.
cd JSON
touch new.json

 7. Добавить файл под гит.
git add new.json

 8. Закоммитить файл.
git commit -m "new.json file added"

 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
cat >> new.json
$ cat >> new.json
{
"ФИО": "Новиков Александр Анатольевич",
"возраст":37,
"количество домашних животных":0,
"будущая желаемая зарплата":100500
}
Ctrl+C

 11. Отправить изменения на внешний репозиторий.
git commit -am "Data added into new.json file"
git push




 12. Создать файл preferences.json
touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
cat >> preferences.json
{
"Любимый фильм": "Chip 'n Dale: Rescue Rangers",
"любимый сериал": "Breaking Bad",
"любимая еда": "Junk food",
"любимое время года": "Summer",
"страна, которую хотели бы посетить": "Great Britain"
}
Ctrl+C

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > skills.json
{
"1": "Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.",
"2": "Что такое клиент-серверная архитектура.",
"3": "HTTP Методы запросов на сервер.",
"4": "Коды ответов HTTP сервера.",
"5": "Структуры HTTP запросов и ответов.",
"6": "Что такое JSON, XML. Их структура.",
"7": "Тестирование API через Postman (JS, автотесты API).",
"8": "Снятие и чтение логов c внешнего сервера.",
"9": "Снифинг http web трафика через Charles и Fiddler.",
"10": "Dev Tools веб браузеров (Google Chrome, FireFox).",
"11": "VPN. (Как работает, зачем нужен, как использовать, варианты инструментов).",
"12": "Мобильное тестирование.",
"13": "Особенность iOS, Android, гайдлайны.",
"14": "Сборка iOS приложений на XCode.",
"15": "Сборка Android приложений на Android Studio.",
"16": "ADB (управление андройд девайсами).",
"17": "Настройка прокси и vpn на iOS и Android.",
"18": "Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.",
"19": "Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)",
"20": "Основы bash скриптинг, автоматизация рутинных задач на сервере.",
"21": "Доступ к удалённым серверам.",
"22": "Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).",
"23": "База данных Postgres (установка, настройка и использование).",
"24": "Нереляционная база данных Redis (установка, настройка и использование).",
"25": "Нагрузочное тестирование в Jmeter.",
"26": "Методология разработки Scrum.",
"27": "Python. (Изучение основ. Создание клиент серверного приложения)."
}

 15. Отправить сразу 2 файла на внешний репозиторий.
git add preferences.json skills.json
git commit -m "files preferences.json skills.json added"
git push

 16. На веб интерфейсе создать файл bug_report.json.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 20. Синхронизировать внешний и локальный репозиторий JSON
git pull

XML
 21. Создать внешний репозиторий c названием XML.

 22. Клонировать репозиторий XML на локальный компьютер.
git clone git@github.com:AlexanderNovikov-QAcourse/XML.git
 
23. Внутри локального XML создать файл “new.xml”.
touch new.xml


 24. Добавить файл под гит.
git add new.xml

 25. Закоммитить файл.
git commit -m "File new.xml added"

 26. Отправить файл на внешний GitHub репозиторий.
 git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
cat >> new.xml
<?xml version="1.0"?>
<MYSELF>
<ФИО>Новиков Александр Анатольевич</ФИО>
<возраст>37</возраст>
<количество_домашних_животных>0</количество_домашних_животных>
<будущая_желаемая_зарплата>100500</будущая_желаемая_зарплата>
</MYSELF>

 28. Отправить изменения на внешний репозиторий.
git commit -am "data added into new.xml file"

git push

 29. Создать файл preferences.xml
touch preferences.xml 

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 cat >> preferences.xml
<?xml version="1.0"?>
<preferences>
<Любимый_фильм>Chip 'n Dale: Rescue Rangers</Любимый_фильм>
<любимый_сериал>Breaking Bad</любимый_сериал>
<любимая_еда>Junk food</любимая_еда>
<любимое_время_года>Summer</любимое_время_года>
<страна_которую_хотели_бы_посетить>Great Britain</страна_которую_хотели_бы_посетить>
</preferences>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat > skills.xml
<?xml version="1.0"?>
<skills>
<_1>Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.</_1>
<_2>Что такое клиент серверная архитектура.</_2>
<_3>HTTP Методы запросов на сервер.</_3>
<_4>Коды ответов HTTP сервера.</_4>
<_5>Структуры HTTP запросов и ответов.</_5>
<_6>Что такое JSON, XML. Их структура.</_6>
<_7>Тестирование API через Postman (JS, автотесты API).</_7>
<_8>Снятие и чтение логов c внешнего сервера.</_8>
<_9>Снифинг http web трафика через Charles и Fiddler.</_9>
<_10>Dev Tools веб браузеров (Google Chrome, FireFox).</_10>
<_11>VPN. (Как работает, зачем нужен, как использовать, варианты инструментов).</_11>
<_12>Мобильное тестирование.</_12>
<_13>Особенность iOS, Android, гайдлайны.</_13>
<_14>Сборка iOS приложений на XCode.</_14>
<_15>Сборка Android приложений на Android Studio.</_15>
<_16>ADB (управление андройд девайсами).</_16>
<_17>Настройка прокси и vpn на iOS и Android.</_17>
<_18>Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.</_18>
<_19>Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)</_19>
<_20>Основы bash скриптинг, автоматизация рутинных задач на сервере.</_20>
<_21>Доступ к удалённым серверам.</_21>
<_22>Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).</_22>
<_23>База данных Postgres (установка, настройка и использование).</_23>
<_24>Нереляционная база данных Redis (установка, настройка и использование).</_24>
<_25>Нагрузочное тестирование в Jmeter.</_25>
<_26>Методология разработки Scrum.</_26>
<_27>Python. (Изучение основ. Создание клиент серверного приложения).</_27>
</skills>


 32. Сделать коммит в одну строку.
git add preferences.xml skills.xml; git commit -m "files preferences.xml and skills.xml added"
[main dea025d] files preferences.xml and skills.xml added
 2 files changed, 38 insertions(+)
 create mode 100644 preferences.xml
 create mode 100644 skills.xml


 33. Отправить сразу 2 файла на внешний репозиторий.
git push

 34. На веб интерфейсе создать файл bug_report.xml.

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 38. Синхронизировать внешний и локальный репозиторий XML
 git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone git@github.com:AlexanderNovikov-QAcourse/TXT.git


 3. Внутри локального TXT создать файл “new.txt”.
cd TXT
touch new.txt

 4. Добавить файл под гит.
git add new.txt

 5. Закоммитить файл.
git commit -m "new.txt file added"

 6. Отправить файл на внешний GitHub репозиторий.
git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
cat >> new.txt
ФИО: Новиков Александр Анатольевич.
Возраст: 37.
Количество домашних животных: 0.
Будущая желаемая зарплата: 100500.

 8. Отправить изменения на внешний репозиторий.
git commit -am "Data added into new.txt file"

 9. Создать файл preferences.txt
touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
cat >> preferences.txt
Любимый фильм: Chip 'n Dale: Rescue Rangers.
Любимый серил: Breaking Bad.
Любимая еда: Junk food.
Любимое кремя года: Summer.
Страна, которую хотели бы посетить: Great Britain.

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
cat > skills.txt
1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
2. Что такое клиент-серверная архитектура.
3. HTTP Методы запросов на сервер.
4. Коды ответов HTTP сервера.
5. Структуры HTTP запросов и ответов.
6. Что такое JSON, XML. Их структура.
7. Тестирование API через Postman (JS, автотесты API).
8. Снятие и чтение логов c внешнего сервера.
9. Снифинг http web трафика через Charles и Fiddler.
10. Dev Tools веб браузеров (Google Chrome, FireFox).
11. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)
12. Мобильное тестирование.
13. Особенность iOS, Android, гайдлайны.
14. Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)
15. Сборка Android приложений на Android Studio.
16. ADB (управление андройд девайсами).
17. Настройка прокси и vpn на iOS и Android.
18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.
19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)
20. Основы bash скриптинг, автоматизация рутинных задач на сервере.
21. Доступ к удалённым серверам.
22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
23. База данных Postgres (установка, настройка и использование).
24. Нереляционная база данных Redis (установка, настройка и использование).
25. Нагрузочное тестирование в Jmeter.
26. Методология разработки Scrum.
27. Python. (Изучение основ. Создание клиент серверного приложения)

 12. Сделать коммит в одну строку.
git add preferences.txt skills.txt; git commit -m "files preferences.txt and skills.txt added"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push

 14. На веб интерфейсе создать файл bug_report.txt.

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 18. Синхронизировать внешний и локальный репозиторий TXT
git pull

